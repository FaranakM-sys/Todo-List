{"version":3,"sources":["Components/Row.tsx","todos.ts","Components/Todos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Row","todo","isCompleted","id","title","status","date","time","className","type","checked","aria-label","data","Todos","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAMaA,EAAM,SAAC,GAAD,QACjBC,KAAWC,GADM,EACTC,GADS,EACND,aAAaE,EADP,EACOA,MAAMC,EADb,EACaA,OAAOC,EADpB,EACoBA,KAAKC,EADzB,EACyBA,KADzB,OAIlB,mCAEI,sBAAKC,UAAU,kFAAf,UAEC,uBACEC,KAAK,WACLC,QAASR,IAEb,mBACEM,UAAU,mCADZ,SAKGJ,IAEH,wBACEI,UAAS,uCAvBA,WAuBkCH,EAAkB,oCAAsC,kCAA1F,YADX,SAIGA,IAEH,mBACEG,UAAU,mCADZ,SAIGF,IAEH,mBACEE,UAAU,mCADZ,SAIGD,IAGH,qBAAKC,UAAU,+CAAf,SACE,wBACEG,aAAW,gBACXH,UAAU,qGAFZ,uBC7COI,EAAO,CAChB,CACET,GAAI,IACJD,aAAa,EACbE,MAAO,UACPC,OAAO,SACPC,KAAM,kBACNC,KAAM,YAER,CACEJ,GAAI,IACJD,aAAa,EACbE,MAAO,UACPC,OAAO,cACPC,KAAM,kBACNC,KAAM,YAER,CACEJ,GAAI,IACJD,aAAa,EACbE,MAAO,UACPC,OAAO,cACPC,KAAM,kBACNC,KAAM,aChBCM,EAAQ,WAEnB,OACE,0BAASL,UAAU,wDAAnB,UACE,qBAAKA,UAAU,SACdI,EAAKE,KAAI,SAACb,GAAD,OACR,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKE,WCMLY,MAjBf,WACE,OACE,qCACE,sBAAKP,UAAU,2DAAf,UACA,yCACD,0CACA,wCACA,2CAEE,cAAC,EAAD,QCEQQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3fd7a2d6.chunk.js","sourcesContent":["import { TodoProps } from \"../types\"\r\n\r\n\r\nconst paused = \"Paused\";\r\nconst inprogress= \"Inprogress\";\r\n\r\nexport const Row = ({\r\n  todo: { id,isCompleted, title,status,date,time }\r\n}: TodoProps) => (\r\n   \r\n <>\r\n     \r\n     <div className=\"divide-y divide-gray-200 flex w-full p-4 mb-5 mt-4 justify-between items-center\">\r\n     \r\n      <input \r\n        type=\"checkbox\"\r\n        checked={isCompleted}\r\n      />\r\n    <p\r\n      className=\"\r\n          ml-2 text-base font-semibold \"\r\n          \r\n    >\r\n      {title}\r\n    </p>\r\n    <button\r\n      className={`rounded-full border-gray-400 ${status===paused ? \"bg-yellow-500 h-7 w-20 text-white\" : \"bg-blue-700 h-7 w-24 text-white\"}\r\n      `}\r\n    >\r\n      {status}\r\n    </button>\r\n    <p\r\n      className=\"\r\n      ml-2 text-base font-semibold \"\r\n    >\r\n      {date}\r\n    </p>\r\n    <p\r\n      className=\"\r\n      ml-2 text-base font-semibold \"\r\n    >\r\n      {time}\r\n    </p>\r\n\r\n    <div className=\"w-1/6 flex justify-between items-center mr-2\">\r\n      <button\r\n        aria-label=\"Delete a todo\"\r\n        className=\"h-7 w-7 flex justify-center items-center bg-red-400 hover:bg-red-500 text-white font-bold  rounded\"\r\n      >\r\n        X\r\n      </button>\r\n           \r\n    </div>\r\n  </div>\r\n  </>\r\n)\r\n","export const data = [\r\n    {\r\n      id: \"0\",\r\n      isCompleted: false,\r\n      title: \"Task #1\",\r\n      status:\"Paused\",\r\n      date: \"21 October 2020\",\r\n      time: \"09:30 am\"\r\n    },\r\n    {\r\n      id: \"1\",\r\n      isCompleted: false,\r\n      title: \"Task #2\",\r\n      status:\"In Progress\",\r\n      date: \"21 October 2020\",\r\n      time: \"11:00 am\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      isCompleted: false,\r\n      title: \"Task #3\",\r\n      status:\"In Progress\",\r\n      date: \"21 October 2020\",\r\n      time: \"05:30 pm\"\r\n    },\r\n  ]","import React, { ChangeEvent, FormEvent, useState } from \"react\"\r\n\r\n\r\nimport { Row } from \"./Row\"\r\nimport { data } from \"../todos\"\r\nimport { Todo } from \"../types\"\r\n\r\nexport const Todos = () =>{\r\n\r\n  return (\r\n    <section className=\"w-10/12 lg:w-1/2 max-w-2xl flex flex-col items-center\">\r\n      <div className=\"h-10\" />\r\n      {data.map((todo) => (\r\n        <Row\r\n          key={todo.id}\r\n          todo={todo}\r\n        \r\n        />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from \"react\"\nimport { Todos } from \"./Components/Todos\"\n\nfunction App() {\n  return (\n    <>\n      <div className=\"grid grid-cols-4 text-gray-400 text-sm mt-15 ml-20 mr-20\">\n      <div>Tasks </div>\n     <div>Status </div>\n     <div>Date </div>\n     <div>Time </div>\n     </div>\n       <Todos />\n       </>\n    \n    \n  )\n}\n\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./tailwind.output.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}